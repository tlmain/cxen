<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json,application/xml,text/xml</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl/>
        <http_method>POST</http_method>
        <name>UpdateExecutionLog</name>
        <operation_script><![CDATA[(function process(/*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {
	try
	{
		var exeID = request.body.data.executionID;
		switch(request.body.data.level)
		{
			case("Warning"):
			{
				gs.warn(exeID + ": " + request.body.data.message);
				break;
			}
			case("Error"):
			{
				gs.error(exeID + ": " + request.body.data.message);
				break;
			}
			case("Info"):
			{
				gs.info(exeID + ": " + request.body.data.message);
				break;
			}
		}
		//Now find the function result record if it exists
		var res = new GlideRecord("x_wols2_cxen_cxen_async_task");
		res.addQuery("sys_id",exeID);
		res.query();
		if (res.next())
			{
			//found, append new log
				var completion = request.body.data.message == "Execution completed successfully";
				var level = request.body.data.level;
				var message = request.body.data.message;
				while(message.contains("\n"))
					{
						message = message.replace("\n","<br/>");
					}
				var colorTag = completion ? "success" : (level == "Info" ? "primary" : (level == "Warning" ? "warning" : "danger"));
				res.u_execution_log += ('<span class="label label-pill label-' + colorTag + '">' + request.body.data.module + ' ' + level + ':</span>' + message + '<br/>');
			res.update();			
		}
	}
	catch(e)
	{
		response.setBody({result: "FAILED", error: e});
		}
	}
)(request, response);

  function pad(_input, _length, _padChar)
{
	while(_input.length < _length)
		{
			_input += _padChar;
		}
	return _input;
}]]></operation_script>
        <operation_uri>/api/x_wols2_cxen/cxen_callback/updateExecutionLog</operation_uri>
        <produces>application/json,application/xml,text/xml</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/updateExecutionLog</relative_path>
        <request_example/>
        <requires_acl_authorization>false</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>AAJ9045</sys_created_by>
        <sys_created_on>2018-07-20 20:06:33</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>c2639e63db9753c486f152c8dc961989</sys_id>
        <sys_mod_count>119</sys_mod_count>
        <sys_name>UpdateExecutionLog</sys_name>
        <sys_package display_value="CXen" source="x_wols2_cxen">a68321a1db071bc001767ee5bf96192e</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="CXen">a68321a1db071bc001767ee5bf96192e</sys_scope>
        <sys_update_name>sys_ws_operation_c2639e63db9753c486f152c8dc961989</sys_update_name>
        <sys_updated_by>AAJ9045</sys_updated_by>
        <sys_updated_on>2018-09-22 05:45:38</sys_updated_on>
        <web_service_definition display_value="CXen_Callback">85235a63db9753c486f152c8dc9619d3</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
